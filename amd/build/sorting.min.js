define("block_mmquicklink/sorting",["exports","block_mmquicklink/sortable","core/ajax"],(function(_exports,_sortable,_ajax){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Quicklink items sortable.
   *
   * @package   block_mmquicklink
   * @copyright 2020 Mediamaisteri Oy
   * @author    Mikko Haikonen <mikko.haikonen@mediamaisteri.com>
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_sortable=_interopRequireDefault(_sortable),_ajax=_interopRequireDefault(_ajax);const updateSorting=(parent,children)=>{_ajax.default.call([{methodname:"block_mmquicklink_update_sorting",args:{parent:parent,children:children}}])[0].done((function(response){})).fail((function(ex){console.log(ex)}))};_exports.init=()=>{for(var nestedSortables=[].slice.call(document.querySelectorAll(".nested-sortable")),i=0;i<nestedSortables.length;i++){let group="";group=nestedSortables[i].classList.contains("expand")?"nested":"mainlist";let sortable=new _sortable.default(nestedSortables[i],{group:group,sort:!0,animation:150,filter:".mmquicklink-mainbtn",fallbackOnBody:!0,swapThreshold:.65,dataIdAttr:"data-sortable-id",onRemove:function(evt){updateSorting(evt.from.id,sortable.toArray())},onUpdate:function(evt){updateSorting(evt.to.id,sortable.toArray())},onAdd:function(evt){updateSorting(evt.to.id,sortable.toArray())}})}}}));

//# sourceMappingURL=sorting.min.js.map