{"version":3,"file":"confirm.min.js","sources":["../src/confirm.js"],"sourcesContent":["/* eslint-disable promise/always-return */\n/* eslint-disable promise/catch-or-return */\ndefine(['jquery', 'core/config','core/templates', 'core/modal_factory', 'core/modal_events','core/str', 'core/notification'], function($, mdlcfg, templates, ModalFactory, ModalEvents, str, notification) {\n    return {\n        init: function(courseid, hide, coursename, categoryid) {\n\n            // Define variables.\n            var showhideaction;\n            var data;\n\n            // Define data array depending on hide variable.\n            if (hide == 1) {\n                showhideaction = \"hidecourse\";\n                data = { hide: hide , 'coursename': coursename};\n            } else {\n                showhideaction = \"showcourse\";\n                data = { 'coursename': coursename };\n            }\n\n             // Bind click event to show delete course modal to delete course button.\n             $(\".btn-deletecourse\").click(function(e) {\n                // Prevent default link action.\n                e.preventDefault();\n                var templateData = { 'coursename': coursename };\n                render_delete_modal(templateData);\n            });\n\n            /**\n             * This function creates a delete course modal\n             *\n             * @param {object} templateData Data used when render the modal\n             *\n             * @returns void\n             */\n            function render_delete_modal(templateData) {\n\n                // Defined string want to get\n                var strings = [\n                    {\n                        key: 'delete_course_modal_title',\n                        component: 'block_mmquicklink'\n                    },\n                    {\n                        key: 'delete_course_success_msg',\n                        component: 'block_mmquicklink'\n                    },\n                    {\n                        key: 'delete_course_failed_msg',\n                        component: 'block_mmquicklink'\n                    }\n                ];\n\n                str.get_strings(strings).then(function (translatedString) {\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: templates.render(\"block_mmquicklink/modal_deletecourse_title\", templateData),\n                        body: templates.render(\"block_mmquicklink/modal_deletecourse_body\", templateData),\n                    }).then(function(modal) {\n                        var deleteButtonText = translatedString[0];\n                        modal.setSaveButtonText(deleteButtonText);\n                        var root = modal.getRoot();\n                        root.on(ModalEvents.save, function() {\n                            var deleteSuccessMessage = translatedString[1];\n                            var deleteFailMessage = translatedString[2];\n\n                            $.get(mdlcfg.wwwroot + '/blocks/mmquicklink/delete.php', { 'id': courseid } )\n                            .then(function(){\n                                notification.addNotification({\n                                    message: deleteSuccessMessage,\n                                    type: \"success\"\n                                });\n                                setTimeout(function(){\n                                    location.href = mdlcfg.wwwroot;\n                                }, 1000);\n                            })\n                            .catch(function(error) {\n                                notification.addNotification({\n                                    message: deleteFailMessage,\n                                    type: \"error\"\n                                });\n                            });\n    \n                        });\n                        modal.show();\n                    });\n                });\n            }\n\n\n\n            // What happens when user clicks hide/show course button.\n            $(\".btn-hidecourse, .btn-showcourse\").click(function(e) {\n                // Prevent default link action.\n                e.preventDefault();\n                createshowhidemodal(showhideaction, data);\n            });\n\n            /**\n             * This function creates a show/hide modal.\n             *\n             * @param {string} showhideaction\n             * @param {string} data\n             */\n            function createshowhidemodal(showhideaction, data) {\n                console.log(showhideaction); //showcourse hidecourse\n                $.get(mdlcfg.wwwroot + '/blocks/mmquicklink/checkcompletionsettings.php', {\n                    'courseid': courseid,\n                    'action' : showhideaction,\n                    'confirm': true,\n                    'sesskey': mdlcfg.sesskey,\n                }).done(function(result) {\n                    data.completionok = result;\n                    data.url = mdlcfg.wwwroot + `/course/completion.php/?id=${courseid}`;\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: templates.render(\"block_mmquicklink/modal_hidecourse_title\", data),\n                        body: templates.render(\"block_mmquicklink/modal_hidecourse_body\", data),\n                    }).then(function(modal) {\n                        var root = modal.getRoot();\n                        root.on(ModalEvents.save, function() {\n                            $.get(mdlcfg.wwwroot + '/course/ajax/management.php', {\n                                'courseid': courseid,\n                                'action': showhideaction,\n                                'confirm': 1,\n                                'sesskey': mdlcfg.sesskey,\n                            }).done(function() {\n                                $.get(mdlcfg.wwwroot + '/blocks/mmquicklink/changevisibility.php', {\n                                    'courseid': courseid,\n                                    'action': showhideaction,\n                                    'confirm': 1,\n                                    'sesskey': mdlcfg.sesskey,\n                                }).done(function() {\n                                    // Nothing to do here.\n                                    location.reload();\n                                });\n                            });\n    \n                        });\n                        modal.show();\n                    });\n\n\n\n\n                });\n                \n            }\n\n            /**\n             * This function creates a archive modal.\n             */\n            function archive() {\n                ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: templates.render(\"block_mmquicklink/modal_archivecourse_title\", data),\n                    body: templates.render(\"block_mmquicklink/modal_archivecourse_body\", data),\n                }).then(function(modal) {\n                    var root = modal.getRoot();\n                    root.on(ModalEvents.save, function() {\n                        $.get(mdlcfg.wwwroot + '/blocks/mmquicklink/archive.php', { 'courseid': courseid, 'categoryid': categoryid, 'confirm': 1 } ).done(function(data) {\n                            // Nothing to do here.\n                            location.reload();\n                        });\n\n                    });\n                    modal.show();\n                });\n            }\n\n            // What happens when user clicks archive course button.\n            $(\".btn-archivecourse\").click(function(e) {\n                // Prevent default link action.\n                e.preventDefault();\n                archive();\n            });\n\n        }\n    }\n});\n"],"names":["define","$","mdlcfg","templates","ModalFactory","ModalEvents","str","notification","init","courseid","hide","coursename","categoryid","showhideaction","data","click","e","preventDefault","templateData","strings","key","component","get_strings","then","translatedString","create","type","types","SAVE_CANCEL","title","render","body","modal","deleteButtonText","setSaveButtonText","getRoot","on","save","deleteSuccessMessage","deleteFailMessage","get","wwwroot","addNotification","message","setTimeout","location","href","catch","error","show","render_delete_modal","console","log","sesskey","done","result","completionok","url","reload","createshowhidemodal"],"mappings":"AAEAA,mCAAO,CAAC,SAAU,cAAc,iBAAkB,qBAAsB,oBAAoB,WAAY,sBAAsB,SAASC,EAAGC,OAAQC,UAAWC,aAAcC,YAAaC,IAAKC,oBAClL,CACHC,KAAM,SAASC,SAAUC,KAAMC,WAAYC,gBAGnCC,eACAC,KAGQ,GAARJ,MACAG,eAAiB,aACjBC,KAAO,CAAEJ,KAAMA,gBAAqBC,cAEpCE,eAAiB,aACjBC,KAAO,YAAgBH,aAI1BV,EAAE,qBAAqBc,OAAM,SAASC,GAEnCA,EAAEC,0BAYuBC,kBAGrBC,QAAU,CACV,CACIC,IAAK,4BACLC,UAAW,qBAEf,CACID,IAAK,4BACLC,UAAW,qBAEf,CACID,IAAK,2BACLC,UAAW,sBAInBf,IAAIgB,YAAYH,SAASI,MAAK,SAAUC,kBACpCpB,aAAaqB,OAAO,CAChBC,KAAMtB,aAAauB,MAAMC,YACzBC,MAAO1B,UAAU2B,OAAO,6CAA8CZ,cACtEa,KAAM5B,UAAU2B,OAAO,4CAA6CZ,gBACrEK,MAAK,SAASS,WACTC,iBAAmBT,iBAAiB,GACxCQ,MAAME,kBAAkBD,kBACbD,MAAMG,UACZC,GAAG/B,YAAYgC,MAAM,eAClBC,qBAAuBd,iBAAiB,GACxCe,kBAAoBf,iBAAiB,GAEzCvB,EAAEuC,IAAItC,OAAOuC,QAAU,iCAAkC,IAAQhC,WAChEc,MAAK,WACFhB,aAAamC,gBAAgB,CACzBC,QAASL,qBACTZ,KAAM,YAEVkB,YAAW,WACPC,SAASC,KAAO5C,OAAOuC,UACxB,QAENM,OAAM,SAASC,OACZzC,aAAamC,gBAAgB,CACzBC,QAASJ,kBACTb,KAAM,gBAKlBM,MAAMiB,aA3DdC,CADmB,YAAgBvC,gBAoEvCV,EAAE,oCAAoCc,OAAM,SAASC,GAEjDA,EAAEC,0BAUuBJ,eAAgBC,MACzCqC,QAAQC,IAAIvC,gBACZZ,EAAEuC,IAAItC,OAAOuC,QAAU,kDAAmD,UAC1DhC,gBACDI,wBACA,UACAX,OAAOmD,UACnBC,MAAK,SAASC,QACbzC,KAAK0C,aAAeD,OACpBzC,KAAK2C,IAAMvD,OAAOuC,6CAAwChC,UAC1DL,aAAaqB,OAAO,CAChBC,KAAMtB,aAAauB,MAAMC,YACzBC,MAAO1B,UAAU2B,OAAO,2CAA4ChB,MACpEiB,KAAM5B,UAAU2B,OAAO,0CAA2ChB,QACnES,MAAK,SAASS,OACFA,MAAMG,UACZC,GAAG/B,YAAYgC,MAAM,WACtBpC,EAAEuC,IAAItC,OAAOuC,QAAU,8BAA+B,UACtChC,gBACFI,uBACC,UACAX,OAAOmD,UACnBC,MAAK,WACJrD,EAAEuC,IAAItC,OAAOuC,QAAU,2CAA4C,UACnDhC,gBACFI,uBACC,UACAX,OAAOmD,UACnBC,MAAK,WAEJT,SAASa,kBAKrB1B,MAAMiB,aA5CdU,CAAoB9C,eAAgBC,SA4ExCb,EAAE,sBAAsBc,OAAM,SAASC,GAEnCA,EAAEC,iBApBFb,aAAaqB,OAAO,CAChBC,KAAMtB,aAAauB,MAAMC,YACzBC,MAAO1B,UAAU2B,OAAO,8CAA+ChB,MACvEiB,KAAM5B,UAAU2B,OAAO,6CAA8ChB,QACtES,MAAK,SAASS,OACFA,MAAMG,UACZC,GAAG/B,YAAYgC,MAAM,WACtBpC,EAAEuC,IAAItC,OAAOuC,QAAU,kCAAmC,UAAchC,oBAAwBG,mBAAuB,IAAM0C,MAAK,SAASxC,MAEvI+B,SAASa,eAIjB1B,MAAMiB"}