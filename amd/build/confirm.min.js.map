{"version":3,"file":"confirm.min.js","sources":["../src/confirm.js"],"sourcesContent":["/* eslint-disable promise/always-return */\r\n/* eslint-disable promise/catch-or-return */\r\ndefine(['jquery', 'core/config','core/templates', 'core/modal_factory', 'core/modal_events','core/str', 'core/notification'], function($, mdlcfg, templates, ModalFactory, ModalEvents, str, notification) {\r\n    return {\r\n        init: function(courseid, hide, coursename, categoryid) {\r\n\r\n            // Define variables.\r\n            var showhideaction;\r\n            var data;\r\n\r\n            // Define data array depending on hide variable.\r\n            if (hide == 1) {\r\n                showhideaction = \"hidecourse\";\r\n                data = { hide: hide , 'coursename': coursename};\r\n            } else {\r\n                showhideaction = \"showcourse\";\r\n                data = { 'coursename': coursename };\r\n            }\r\n\r\n             // Bind click event to show delete course modal to delete course button.\r\n             $(\".btn-deletecourse\").click(function(e) {\r\n                // Prevent default link action.\r\n                e.preventDefault();\r\n                var templateData = { 'coursename': coursename };\r\n                render_delete_modal(templateData);\r\n            });\r\n\r\n            /**\r\n             * This function creates a delete course modal\r\n             *\r\n             * @param {object} templateData Data used when render the modal\r\n             *\r\n             * @returns void\r\n             */\r\n            function render_delete_modal(templateData) {\r\n\r\n                // Defined string want to get\r\n                var strings = [\r\n                    {\r\n                        key: 'delete_course_modal_title',\r\n                        component: 'block_mmquicklink'\r\n                    },\r\n                    {\r\n                        key: 'delete_course_success_msg',\r\n                        component: 'block_mmquicklink'\r\n                    },\r\n                    {\r\n                        key: 'delete_course_failed_msg',\r\n                        component: 'block_mmquicklink'\r\n                    }\r\n                ];\r\n\r\n                str.get_strings(strings).then(function (translatedString) {\r\n                    ModalFactory.create({\r\n                        type: ModalFactory.types.SAVE_CANCEL,\r\n                        title: templates.render(\"block_mmquicklink/modal_deletecourse_title\", templateData),\r\n                        body: templates.render(\"block_mmquicklink/modal_deletecourse_body\", templateData),\r\n                    }).then(function(modal) {\r\n                        var deleteButtonText = translatedString[0];\r\n                        modal.setSaveButtonText(deleteButtonText);\r\n                        var root = modal.getRoot();\r\n                        root.on(ModalEvents.save, function() {\r\n                            var deleteSuccessMessage = translatedString[1];\r\n                            var deleteFailMessage = translatedString[2];\r\n\r\n                            $.get(mdlcfg.wwwroot + '/blocks/mmquicklink/delete.php', { 'id': courseid } )\r\n                            .then(function(){\r\n                                notification.addNotification({\r\n                                    message: deleteSuccessMessage,\r\n                                    type: \"success\"\r\n                                });\r\n                                setTimeout(function(){\r\n                                    location.href = mdlcfg.wwwroot;\r\n                                }, 1000);\r\n                            })\r\n                            .catch(function(error) {\r\n                                notification.addNotification({\r\n                                    message: deleteFailMessage,\r\n                                    type: \"error\"\r\n                                });\r\n                            });\r\n    \r\n                        });\r\n                        modal.show();\r\n                    });\r\n                });\r\n            }\r\n\r\n\r\n\r\n            // What happens when user clicks hide/show course button.\r\n            $(\".btn-hidecourse, .btn-showcourse\").click(function(e) {\r\n                // Prevent default link action.\r\n                e.preventDefault();\r\n                createshowhidemodal(showhideaction, data);\r\n            });\r\n\r\n            /**\r\n             * This function creates a show/hide modal.\r\n             *\r\n             * @param {string} showhideaction\r\n             * @param {string} data\r\n             */\r\n            function createshowhidemodal(showhideaction, data) {\r\n                ModalFactory.create({\r\n                    type: ModalFactory.types.SAVE_CANCEL,\r\n                    title: templates.render(\"block_mmquicklink/modal_hidecourse_title\", data),\r\n                    body: templates.render(\"block_mmquicklink/modal_hidecourse_body\", data),\r\n                }).then(function(modal) {\r\n                    var root = modal.getRoot();\r\n                    root.on(ModalEvents.save, function() {\r\n                        $.get(mdlcfg.wwwroot + '/course/ajax/management.php', {\r\n                            'courseid': courseid,\r\n                            'action': showhideaction,\r\n                            'confirm': 1,\r\n                            'sesskey': mdlcfg.sesskey,\r\n                        }).done(function() {\r\n                            $.get(mdlcfg.wwwroot + '/blocks/mmquicklink/changevisibility.php', {\r\n                                'courseid': courseid,\r\n                                'action': showhideaction,\r\n                                'confirm': 1,\r\n                                'sesskey': mdlcfg.sesskey,\r\n                            }).done(function() {\r\n                                // Nothing to do here.\r\n                                location.reload();\r\n                            });\r\n                        });\r\n\r\n                    });\r\n                    modal.show();\r\n                });\r\n            }\r\n\r\n            /**\r\n             * This function creates a archive modal.\r\n             */\r\n            function archive() {\r\n                ModalFactory.create({\r\n                    type: ModalFactory.types.SAVE_CANCEL,\r\n                    title: templates.render(\"block_mmquicklink/modal_archivecourse_title\", data),\r\n                    body: templates.render(\"block_mmquicklink/modal_archivecourse_body\", data),\r\n                }).then(function(modal) {\r\n                    var root = modal.getRoot();\r\n                    root.on(ModalEvents.save, function() {\r\n                        $.get(mdlcfg.wwwroot + '/blocks/mmquicklink/archive.php', { 'courseid': courseid, 'categoryid': categoryid, 'confirm': 1 } ).done(function(data) {\r\n                            // Nothing to do here.\r\n                            location.reload();\r\n                        });\r\n\r\n                    });\r\n                    modal.show();\r\n                });\r\n            }\r\n\r\n            // What happens when user clicks archive course button.\r\n            $(\".btn-archivecourse\").click(function(e) {\r\n                // Prevent default link action.\r\n                e.preventDefault();\r\n                archive();\r\n            });\r\n\r\n        }\r\n    }\r\n});\r\n"],"names":["define","$","mdlcfg","templates","ModalFactory","ModalEvents","str","notification","init","courseid","hide","coursename","categoryid","showhideaction","data","click","e","preventDefault","templateData","strings","key","component","get_strings","then","translatedString","create","type","types","SAVE_CANCEL","title","render","body","modal","deleteButtonText","setSaveButtonText","getRoot","on","save","deleteSuccessMessage","deleteFailMessage","get","wwwroot","addNotification","message","setTimeout","location","href","catch","error","show","render_delete_modal","sesskey","done","reload","createshowhidemodal"],"mappings":"AAEAA,mCAAO,CAAC,SAAU,cAAc,iBAAkB,qBAAsB,oBAAoB,WAAY,sBAAsB,SAASC,EAAGC,OAAQC,UAAWC,aAAcC,YAAaC,IAAKC,oBAClL,CACHC,KAAM,SAASC,SAAUC,KAAMC,WAAYC,gBAGnCC,eACAC,KAGQ,GAARJ,MACAG,eAAiB,aACjBC,KAAO,CAAEJ,KAAMA,gBAAqBC,cAEpCE,eAAiB,aACjBC,KAAO,YAAgBH,aAI1BV,EAAE,qBAAqBc,OAAM,SAASC,GAEnCA,EAAEC,0BAYuBC,kBAGrBC,QAAU,CACV,CACIC,IAAK,4BACLC,UAAW,qBAEf,CACID,IAAK,4BACLC,UAAW,qBAEf,CACID,IAAK,2BACLC,UAAW,sBAInBf,IAAIgB,YAAYH,SAASI,MAAK,SAAUC,kBACpCpB,aAAaqB,OAAO,CAChBC,KAAMtB,aAAauB,MAAMC,YACzBC,MAAO1B,UAAU2B,OAAO,6CAA8CZ,cACtEa,KAAM5B,UAAU2B,OAAO,4CAA6CZ,gBACrEK,MAAK,SAASS,WACTC,iBAAmBT,iBAAiB,GACxCQ,MAAME,kBAAkBD,kBACbD,MAAMG,UACZC,GAAG/B,YAAYgC,MAAM,eAClBC,qBAAuBd,iBAAiB,GACxCe,kBAAoBf,iBAAiB,GAEzCvB,EAAEuC,IAAItC,OAAOuC,QAAU,iCAAkC,IAAQhC,WAChEc,MAAK,WACFhB,aAAamC,gBAAgB,CACzBC,QAASL,qBACTZ,KAAM,YAEVkB,YAAW,WACPC,SAASC,KAAO5C,OAAOuC,UACxB,QAENM,OAAM,SAASC,OACZzC,aAAamC,gBAAgB,CACzBC,QAASJ,kBACTb,KAAM,gBAKlBM,MAAMiB,aA3DdC,CADmB,YAAgBvC,gBAoEvCV,EAAE,oCAAoCc,OAAM,SAASC,GAEjDA,EAAEC,0BAUuBJ,eAAgBC,MACzCV,aAAaqB,OAAO,CAChBC,KAAMtB,aAAauB,MAAMC,YACzBC,MAAO1B,UAAU2B,OAAO,2CAA4ChB,MACpEiB,KAAM5B,UAAU2B,OAAO,0CAA2ChB,QACnES,MAAK,SAASS,OACFA,MAAMG,UACZC,GAAG/B,YAAYgC,MAAM,WACtBpC,EAAEuC,IAAItC,OAAOuC,QAAU,8BAA+B,UACtChC,gBACFI,uBACC,UACAX,OAAOiD,UACnBC,MAAK,WACJnD,EAAEuC,IAAItC,OAAOuC,QAAU,2CAA4C,UACnDhC,gBACFI,uBACC,UACAX,OAAOiD,UACnBC,MAAK,WAEJP,SAASQ,kBAKrBrB,MAAMiB,UAnCVK,CAAoBzC,eAAgBC,SA6DxCb,EAAE,sBAAsBc,OAAM,SAASC,GAEnCA,EAAEC,iBApBFb,aAAaqB,OAAO,CAChBC,KAAMtB,aAAauB,MAAMC,YACzBC,MAAO1B,UAAU2B,OAAO,8CAA+ChB,MACvEiB,KAAM5B,UAAU2B,OAAO,6CAA8ChB,QACtES,MAAK,SAASS,OACFA,MAAMG,UACZC,GAAG/B,YAAYgC,MAAM,WACtBpC,EAAEuC,IAAItC,OAAOuC,QAAU,kCAAmC,UAAchC,oBAAwBG,mBAAuB,IAAMwC,MAAK,SAAStC,MAEvI+B,SAASQ,eAIjBrB,MAAMiB"}