{"version":3,"file":"sorting.min.js","sources":["../src/sorting.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Quicklink items sortable.\n *\n * @package   block_mmquicklink\n * @copyright 2020 Mediamaisteri Oy\n * @author    Mikko Haikonen <mikko.haikonen@mediamaisteri.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Sortable from 'block_mmquicklink/sortable';\nimport Ajax from 'core/ajax';\n\nconst updateSorting = (parent, children) => {\n    let promises = Ajax.call([\n        { methodname: 'block_mmquicklink_update_sorting', args: {\"parent\": parent, \"children\" : children}}\n    ]);\n    promises[0].done(function(response) {\n    }).fail(function(ex) {\n        console.log(ex);\n    });\n}\n\nexport const init = () => {\n\n    var nestedSortables = [].slice.call(document.querySelectorAll('.nested-sortable'));\n    \n    // Loop through each nested sortable element\n    for (var i = 0; i < nestedSortables.length; i++) {\n        let group = \"\";\n        if (nestedSortables[i].classList.contains('expand')) {\n            group = \"nested\";\n        } else {\n            group = \"mainlist\";\n        }\n        let sortable = new Sortable(nestedSortables[i], {\n            group: group,\n            sort: true,\n            animation: 150,\n            filter: \".mmquicklink-mainbtn\",\n            fallbackOnBody: true,\n            swapThreshold: 0.65,\n            dataIdAttr: 'data-sortable-id',\n            // Element is removed from the list into another list\n            onRemove: function (evt) {\n                updateSorting(evt.from.id, sortable.toArray());\n            },\n            // Changed sorting within list\n            onUpdate: function (evt) {\n                updateSorting(evt.to.id, sortable.toArray());\n            },\n            // Element is dropped into the list from another list\n            onAdd: function (evt) {\n                updateSorting(evt.to.id, sortable.toArray());\n        \n            },\n        });\n    }\n};\n\n\n//grunt amd --force --root=blocks/mmquicklink"],"names":["updateSorting","parent","children","Ajax","call","methodname","args","done","response","fail","ex","console","log","nestedSortables","slice","document","querySelectorAll","i","length","group","classList","contains","sortable","Sortable","sort","animation","filter","fallbackOnBody","swapThreshold","dataIdAttr","onRemove","evt","from","id","toArray","onUpdate","to","onAdd"],"mappings":";;;;;;;;wKAyBMA,cAAgB,CAACC,OAAQC,YACZC,cAAKC,KAAK,CACrB,CAAEC,WAAY,mCAAoCC,KAAM,QAAWL,gBAAqBC,aAEnF,GAAGK,MAAK,SAASC,cACvBC,MAAK,SAASC,IACbC,QAAQC,IAAIF,sBAIA,aAEZG,gBAAkB,GAAGC,MAAMV,KAAKW,SAASC,iBAAiB,qBAGrDC,EAAI,EAAGA,EAAIJ,gBAAgBK,OAAQD,IAAK,KACzCE,MAAQ,GAERA,MADAN,gBAAgBI,GAAGG,UAAUC,SAAS,UAC9B,SAEA,eAERC,SAAW,IAAIC,kBAASV,gBAAgBI,GAAI,CAC5CE,MAAOA,MACPK,MAAM,EACNC,UAAW,IACXC,OAAQ,uBACRC,gBAAgB,EAChBC,cAAe,IACfC,WAAY,mBAEZC,SAAU,SAAUC,KAChB/B,cAAc+B,IAAIC,KAAKC,GAAIX,SAASY,YAGxCC,SAAU,SAAUJ,KAChB/B,cAAc+B,IAAIK,GAAGH,GAAIX,SAASY,YAGtCG,MAAO,SAAUN,KACb/B,cAAc+B,IAAIK,GAAGH,GAAIX,SAASY"}